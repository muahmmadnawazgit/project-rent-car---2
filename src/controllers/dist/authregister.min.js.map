{"version":3,"sources":["authregister.js"],"names":["bcrypt","require","con","exports","register","req","res","_req$body","verify","name","password","Confirmpassword","mobile","register_at","console","log","body","email","err","result","hashpassword","regeneratorRuntime","async","_context","prev","next","query","length","flash","abrupt","redirect","awrap","hashSync","sent","id","mailOptions","from","sendEmail","to","subject","nodemailer","createTransport","host","port","secure","requireTLS","auth","user","sendMail","info","mail","stop"],"mappings":"aAAA,IAAIA,OAASC,QAAQ,YACjBC,IAAMD,QAAQ,YADdD,WAASC,QAAQ,cAOrBE,QAAQC,SAAW,SAACC,EAAKC,GAAQ,IAAAC,EAO7BC,EAAAA,KAPJL,EAAiCI,EAAjCJ,MAAiCM,EAAAF,EAAAE,KAAAC,EAAAH,EAAAG,SAAAC,GAAAJ,EAAAK,OAAAL,EAAAI,iBAAAJ,EAAAC,OAAAD,EAAAM,YAmC/BC,QAAQC,IAAIV,EAAIW,MAAhBF,IAAAA,MAAQC,uDAAR,CAAAE,EAAAR,GAAA,SAAAS,EAAAC,GAAA,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GACIC,EADJ,MACUR,EADVK,EAAAE,KAAA,EAAA,MAAA,KAAA,EAAA,GACiF,EAAAN,EAAAQ,OADjF,OACiFtB,EAAAuB,MAAA,UAAA,uBADjFL,EAAAM,OAAA,SACiFvB,EAAAwB,SAAA,cADjFP,EAAAE,KAAA,EAAA,MAAA,KAAA,EAAA,GACiFf,GAAAC,EADjF,OACiFN,EAAAuB,MAAA,UAAA,2BADjFL,EAAAM,OAAA,SACiFvB,EAC3EY,SAD2E,cADjFK,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,OAAAF,EAAAE,KAAA,GAAAJ,mBAAAU,MACiF/B,OAAAgC,SAAAtB,EAAA,IADjF,KAAA,GACiFU,EADjFG,EAAAU,KACiF/B,IAAAwB,MAAA,0BAAA,CAW7EjB,KAAMA,EAXuEC,SAAAU,EAa7EH,MAAOA,EAbsET,OAAA,GAAA,SAAAU,EAE3EC,GAF2E,GAAAD,EAAA,MAAAA,EAAAhB,IAAAwB,MAAA,oCAAA,CAAAT,GAAA,SAAAC,EAAAC,GAAA,GAAAD,EAAA,MAAAA,EAmB3E,GAAoB,EAAhBC,EAAOQ,OAGT,OA/CWV,EA4BXW,EA5BkBM,EA4BZf,EAAW,GAAAe,GAzBvBC,EAAA,CAUAC,KAAID,gCACFC,GAdJnB,EAASoB,EAeLC,QAFgB,qBAGhBC,KAAAA,gGAfEtB,EAAKiB,GAYS,oBAXlBM,WAAAC,gBAAA,CACAC,KAAQ,iBACNA,KAAM,IACNC,QAAM,EACNC,YAAQ,EACRC,KAAAA,CACAC,KAAM,gCACJC,KAAM,sBAIVC,SAAAb,EAAA,SAAAjB,EAAA+B,GAMAC,GAAKF,EAAAA,MAASb,IAMiE9B,EAAAuB,MAAA,UAAA,iDAsBlEtB,EAAIwB,SAAS,UA/C5B,IAAmBb,EAAOiB,EAGxBC,MAqBF,KAAA,GAAA,IAAA,MAAA,OAAAZ,EAAA4B","file":"authregister.min.js","sourcesContent":["var bcrypt = require('bcryptjs');\r\nvar con = require('../db.js');\r\nvar nodemailer = require('nodemailer');\r\n\r\n\r\n\r\n//register route\r\nexports.register = (req, res) => {\r\n  const {\r\n    email,\r\n    name,\r\n    password,\r\n    mobile,\r\n    Confirmpassword,\r\n    verify,\r\n    register_at\r\n  } = req.body\r\n\r\n  function sendEmail(email, id) {\r\n    var email = email;\r\n    var id = id;\r\n    var mail = nodemailer.createTransport({\r\n      host: 'smtp.gmail.com',\r\n      port: 587,\r\n      secure: false,\r\n      requireTLS: true,\r\n      auth: {\r\n        user: 'muhammadnawaz110002@gmail.com',\r\n        pass: 'fdbtwhlfzoddxczn'\r\n      }\r\n    })\r\n    var mailOptions = {\r\n      from: 'muhammadnawaz110002@gmail.com',\r\n      to: email,\r\n      subject: 'email verification',\r\n      html: '<p>Welcome to StarShine plz verify your link <a href=\"http://localhost:3000/Verify-Email?id=' + id + '\">Verify</a></p>'\r\n    }\r\n    mail.sendMail(mailOptions, function (err, info) {\r\n      if (err) throw err;\r\n    })\r\n\r\n  }\r\n  console.log(req.body);\r\n  con.query('SELECT email,name FROM users WHERE email=? OR name=?', [email, name], async function (err, result) {\r\n    if (err) throw err;\r\n    if (result.length > 0) {\r\n      req.flash('message', 'user already exsits');\r\n      return res.redirect('/register')\r\n    } else if (password != Confirmpassword) {\r\n      req.flash('message', 'password does not match');\r\n      return res.redirect('/register')\r\n    }\r\n    const hashpassword = await bcrypt.hashSync(password, 8);\r\n    con.query('INSERT INTO users SET ?', {\r\n      name: name,\r\n      password: hashpassword,\r\n      email: email,\r\n      verify: 0\r\n    }, function (err, result) {\r\n      if (err) throw err;\r\n      con.query('SELECT * FROM users WHERE email=?', [email], function (err, result) {\r\n        if (err) throw err;\r\n        if (result.length > 0) {\r\n          sendEmail(email, result[0].id);\r\n          req.flash('message', 'Verification link has been sent Please Verify')\r\n          return res.redirect('/login');\r\n        }\r\n      })\r\n\r\n    })\r\n  })\r\n};\r\n\r\n///email verification set in routes.js \r\n///email verification set in routes.js "]}